---
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 7776000

- name: Install required packages
  ansible.builtin.apt:
    name:
      - curl
      - chrony
      - apt-transport-https
      - ca-certificates
      - gnupg
      - dnsutils
      - net-tools
      - iptables
      - iptables-persistent
      - bridge-utils
      - software-properties-common
      - ufw
    state: present

- name: Enable UFW
  community.general.ufw:
    state: enabled
    logging: medium

- name: Open all TCP ports
  community.general.ufw:
    rule: allow
    proto: tcp
    src: "{{ item }}"
    port: 1:65535
  notify: Restart UFW
  loop:
    - "{{ k3s_cidr }}"
    - "{{ k3s_cidr_2 }}"
    - "{{ network_cidr }}"
    - "{{ network_cidr_ipv6 }}"
    - "{{ network_cidr_ipv6_2 }}"

- name: Open all UDP ports
  community.general.ufw:
    rule: allow
    proto: udp 
    src: "{{ item }}"
    port: 1:65535
  environment:
    PATH: "/usr/sbin:/usr/bin:/bin:{{ ansible_env.PATH }}"
  notify: Restart UFW
  loop:
    - "{{ k3s_cidr }}"
    - "{{ k3s_cidr_2 }}"
    - "{{ network_cidr }}"
    - "{{ network_cidr_ipv6 }}"
    - "{{ network_cidr_ipv6_2 }}"

- name: Configure kernel parameters in cmdline.txt
  ansible.builtin.lineinfile:
    path: /boot/firmware/cmdline.txt
    line: "console=serial0,115200 console=tty1 root=PARTUUID=58b06195-02 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait cgroup_memory=1 cgroup_enable=memory"
    create: yes
  notify: Reboot system

- name: Configure required kernel modules
  ansible.builtin.modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - overlay
    - br_netfilter

- name: Configure sysctl parameters
  ansible.builtin.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  loop:
    - { key: 'net.bridge.bridge-nf-call-iptables', value: '1' }
    - { key: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
    - { key: 'net.ipv4.ip_forward', value: '1' }
    - { key: 'net.ipv4.ip_nonlocal_bind', value: '1' }

- name: Get all network interfaces
  ansible.builtin.shell: "ip link show | grep '^[0-9]' | awk -F': ' '{print $2}' | grep -v lo"
  register: network_interfaces
  changed_when: false

- name: Enable promiscuous mode on all network interfaces
  ansible.builtin.shell:
    cmd: "ip link set {{ item }} promisc on"
  loop: "{{ network_interfaces.stdout_lines }}"
  changed_when: false
  ignore_errors: yes

- name: Make promiscuous mode persistent for all interfaces
  ansible.builtin.lineinfile:
    path: /etc/network/interfaces
    line: "up ip link set {{ item }} promisc on"
    insertafter: EOF
    create: yes
  loop: "{{ network_interfaces.stdout_lines }}"
  ignore_errors: yes

- name: Create containerd config directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: Configure containerd
  ansible.builtin.copy:
    dest: /etc/containerd/config.toml
    content: |
      version = 2
      [plugins."io.containerd.grpc.v1.cri"]
        sandbox_image = "rancher/mirrored-pause:3.6"
        systemd_cgroup = true
    mode: '0644'

- name: Disable swap
  ansible.builtin.command: swapoff -a
  changed_when: false

- name: Remove swap from fstab
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s.*)$'
    replace: '# \1'

- name: Ensure chrony is running
  ansible.builtin.service:
    name: chrony
    state: started
    enabled: yes

- name: Configure system limits
  ansible.builtin.copy:
    dest: /etc/security/limits.d/99-k3s.conf
    content: |
      * soft nofile 1048576
      * hard nofile 1048576
      * soft nproc unlimited
      * hard nproc unlimited
    mode: '0644'

- name: Stop systemd-resolved service
  ansible.builtin.service:
    name: systemd-resolved
    state: stopped
    enabled: no

- name: Remove symlink to /run/systemd/resolve/resolv.conf
  ansible.builtin.file:
    path: /etc/resolv.conf
    state: absent

- name: Configure DNS resolvers
  ansible.builtin.copy:
    dest: /etc/resolv.conf
    content: |
      nameserver 8.8.8.8
      nameserver 1.1.1.1
    mode: '0644'
  notify: Restart networking