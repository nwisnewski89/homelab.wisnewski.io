---
# - name: Update apt cache
#   ansible.builtin.apt:
#     update_cache: yes
#     cache_valid_time: 7776000

# - name: Install required packages
#   ansible.builtin.apt:
#     name:
#       - curl
#       - apt-transport-https
#       - ca-certificates
#       - gnupg
#       - dnsutils
#       - net-tools
#       - iptables
#       - iptables-persistent
#       - bridge-utils
#       - software-properties-common
#       - ufw
#     state: present

# - name: Upgrade all packages
#   ansible.builtin.apt:
#     upgrade: yes
#     cache_valid_time: 7776000

- name: Open all TCP ports to Homelab
  community.general.ufw:
    rule: allow
    proto: tcp
    src: "{{ item }}"
    port: 1:65535
  environment:
    PATH: "/usr/sbin:/usr/bin:/bin:{{ ansible_env.PATH }}"
  loop:
    - 10.0.0.0/8
    - 192.168.4.0/24
  notify: Restart UFW

- name: Open Flannel VXLAN port
  community.general.ufw:
    rule: allow
    proto: udp 
    src: "{{ item }}"
    port: 8472
  environment:
    PATH: "/usr/sbin:/usr/bin:/bin:{{ ansible_env.PATH }}"
  loop:
    - 10.0.0.0/8
    - 192.168.0.0/16
  notify: Restart UFW

- name: UFW allow ssh from macbook
  community.general.ufw:
    rule: allow
    proto: tcp
    src: "{{ my_macbook_ip }}"
    port: 22
  environment:
    PATH: "/usr/sbin:/usr/bin:/bin:{{ ansible_env.PATH }}"
  notify: Restart UFW

- name: Deny ssh from everywhere else
  community.general.ufw:
    rule: deny
    proto: tcp
    src: 0.0.0.0/0
    port: 22
  environment:
    PATH: "/usr/sbin:/usr/bin:/bin:{{ ansible_env.PATH }}"
  notify: Restart UFW 

- name: Configure kernel parameters in cmdline.txt
  ansible.builtin.lineinfile:
    path: /boot/firmware/cmdline.txt
    line: "console=serial0,115200 console=tty1 root=PARTUUID=58b06195-02 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait cgroup_memory=1 cgroup_enable=memory"
    create: yes
  notify: Reboot system

- name: Create handler for rebooting
  ansible.builtin.meta: flush_handlers

- name: Configure required kernel modules
  ansible.builtin.modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - overlay
    - br_netfilter

- name: Configure sysctl parameters
  ansible.builtin.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  loop:
    - { key: 'net.bridge.bridge-nf-call-iptables', value: '1' }
    - { key: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
    - { key: 'net.ipv4.ip_forward', value: '1' }


- name: Create containerd config directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: Configure containerd
  ansible.builtin.copy:
    dest: /etc/containerd/config.toml
    content: |
      version = 2
      [plugins."io.containerd.grpc.v1.cri"]
        sandbox_image = "rancher/mirrored-pause:3.6"
        systemd_cgroup = true
    mode: '0644'

- name: Disable swap
  ansible.builtin.command: swapoff -a
  changed_when: false

- name: Remove swap from fstab
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s.*)$'
    replace: '# \1'

- name: Install chrony
  ansible.builtin.apt:
    name: chrony
    state: present

- name: Ensure chrony is running
  ansible.builtin.service:
    name: chrony
    state: started
    enabled: yes

- name: Configure system limits
  ansible.builtin.copy:
    dest: /etc/security/limits.d/99-k3s.conf
    content: |
      * soft nofile 1048576
      * hard nofile 1048576
      * soft nproc unlimited
      * hard nproc unlimited
    mode: '0644'

- name: Flush handlers
  ansible.builtin.meta: flush_handlers