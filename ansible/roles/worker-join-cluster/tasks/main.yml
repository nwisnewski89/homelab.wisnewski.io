---
- name: Get worker node join
  ansible.builtin.shell:
    cmd: microk8s add-node | grep worker
  register: worker_join
  when: "group_names[0] == 'control-plane'"
  loop:
    - 0
    - 1

- ansible.builtin.debug:
    var: hostvars[groups['control-plane'][0]]['worker_join']['results'][0]['stdout_lines'][-1]

- ansible.builtin.set_fact:
    worker_join_cmd_0: "{{ hostvars[groups['control-plane'][0]]['worker_join']['results'][0]['stdout_lines'][-1] | replace(hostvars[groups['control-plane'][0]]['ansible_default_ipv4']['address'], hostvars[groups['control-plane'][0]]['fqdn'])}}"
    worker_join_cmd_1: "{{ hostvars[groups['control-plane'][0]]['worker_join']['results'][1]['stdout_lines'][-1] | replace(hostvars[groups['control-plane'][0]]['ansible_default_ipv4']['address'], hostvars[groups['control-plane'][0]]['fqdn'])}}"

- ansible.builtin.debug:
    var: 
  loop:
    - "{{ worker_join_cmd_0 }}"
    - "{{ worker_join_cmd_1 }}"
    
- name: Join cluster as worker node
  ansible.builtin.shell:
    cmd: |
      {{ item }} --worker
  when: "group_names[0] == 'worker-nodes'"
  loop:
    - "{{ worker_join_cmd_0 }}"
    - "{{ worker_join_cmd_1 }}"